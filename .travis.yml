---
dist: bionic
language: minimal
git:
  depth: 1
addons:
  apt:
    packages:
      - bridge-utils
      - dnsmasq-base
      - ebtables
      - libvirt-bin
      - libvirt-dev
      - qemu-kvm
      - qemu-utils
      - ruby-dev
      - ansible
      - nfs-kernel-server

# Cache the big Vagrant boxes
cache:
  directories:
  - /home/travis/.vagrant.d/boxes

install:
  - wget -nv https://releases.hashicorp.com/vagrant/2.2.14/vagrant_2.2.14_x86_64.deb -O vagrant.deb
  - sudo dpkg -i vagrant.deb

  - vagrant --version

  - vagrant plugin install vagrant-libvirt
  - vagrant plugin install vagrant-reload

script:
  - pushd vagrant
  # use rsync since NFS doesn't work
  - sed -i -E "s:^(\s*)libvirt_sync_folder_type =.*:\1libvirt_sync_folder_type = 'rsync':" Vagrantfile
  # disable winxp
  - sed -i -E "s/^(\s*'winxp'\:\s).*/\1false,/g" Vagrantfile
  # disable ubuntu
  - sed -i -E "s/^(\s*'ubuntu'\:\s).*/\1false,/g" Vagrantfile
  # enable win7
  - sed -i -E "s/^(\s*'win7'\:\s).*/\1true,/g" Vagrantfile
  # enable downloading VM images instead of building them
  - sed -i -E "s/^(\s*download_vm_image\:\s).*/\1true/" ansible/playbook_2.yml
  # we are not in libvirt group, so use sudo
  - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
  - sudo -E vagrant up --provider=libvirt
  - kill %1
  # start win7 VM
  - sudo -E vagrant ssh -c 'virsh -c qemu:///system start win7'
  # wait a few minutes until the VM boot
  - sleep 3m
  # run vmi-process-list
  - sudo -E vagrant ssh -c 'vmi-process-list -n win7 -j /etc/libvmi/win7-profile.json -s /tmp/introspector'
